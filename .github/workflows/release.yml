name: Release Artifacts
on:
  push:
    branches:
      - main

jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: benlewsey27
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Set build variables
        id: vars
        run: |
          echo "image_tag=$(cat VERSION)" >> $GITHUB_OUTPUT
          echo "chart_version=$(cat ./charts/react-weather/Chart.yaml | grep version | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Build frontend image
        run: |
          versions=$(curl --silent -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GHCR_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/users/benlewsey27/packages/container/react-weather/versions)

          set +e
          echo $versions | grep ${{ steps.vars.outputs.image_tag }} 2>&1 > /dev/null
          if [ $? -eq 0 ]; then
            echo "Container already exists. Skipping..."
            exit 0
          fi
          set -e

          docker build -t ghcr.io/benlewsey27/react-weather:${{ steps.vars.outputs.image_tag }} ./apps/frontend
          docker push ghcr.io/benlewsey27/react-weather:${{ steps.vars.outputs.image_tag }}

      - name: Build backend image
        run: |
          versions=$(curl --silent -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GHCR_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/users/benlewsey27/packages/container/react-weather-api/versions)

          set +e
          echo $versions | grep ${{ steps.vars.outputs.image_tag }} 2>&1 > /dev/null
          if [ $? -eq 0 ]; then
            echo "Container already exists. Skipping..."
            exit 0
          fi
          set -e

          docker build -t ghcr.io/benlewsey27/react-weather-api:${{ steps.vars.outputs.image_tag }} ./apps/backend
          docker push ghcr.io/benlewsey27/react-weather-api:${{ steps.vars.outputs.image_tag }}

      - name: Build backend mock image
        run: |
          versions=$(curl --silent -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GHCR_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/users/benlewsey27/packages/container/react-weather-mock/versions)

          set +e
          echo $versions | grep ${{ steps.vars.outputs.image_tag }} 2>&1 > /dev/null
          if [ $? -eq 0 ]; then
            echo "Container already exists. Skipping..."
            exit 0
          fi
          set -e

          docker build -t ghcr.io/benlewsey27/react-weather-mock:${{ steps.vars.outputs.image_tag }} ./apps/backend-mock
          docker push ghcr.io/benlewsey27/react-weather-mock:${{ steps.vars.outputs.image_tag }}

      - name: Build chart
        env:
          GH_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          versions=$(curl --silent -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GHCR_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/users/benlewsey27/packages/container/charts%2freact-weather/versions)

          set +e
          echo $versions | grep ${{ steps.vars.outputs.chart_version }} 2>&1 > /dev/null
          if [ $? -eq 0 ]; then
            echo "Container already exists. Skipping..."
            exit 0
          fi
          set -e

          helm package ./charts/react-weather
          helm push react-weather-${{ steps.vars.outputs.chart_version}}.tgz oci://ghcr.io/benlewsey27/charts
