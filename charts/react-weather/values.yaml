frontend:
  replicas: 1
  image:
    registry: ghcr.io/benlewsey27
    repository: react-weather
    tag: latest
  service:
    name: react-weather
    type: ClusterIP
    port: 80
  env:
    BACKEND_URL: "{{ .Values.backend.service.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }}"
    RESOLVER_IP: "kube-dns.kube-system.svc.cluster.local"
  resources:
    requests:
      memory: 32Mi
      cpu: 50m
    limits:
      memory: 32Mi
      cpu: 100m

backend:
  replicas: 1
  image:
    registry: ghcr.io/benlewsey27
    repository: react-weather-api
    tag: latest
  service:
    name: react-weather-api
    type: ClusterIP
    port: 3001
  env:
    WEATHER_API_KEY: "XXXX"
    WEATHER_API_URL: "http://api.openweathermap.org/data/2.5/weather"
  resources:
    requests:
      memory: 64Mi
      cpu: 200m
    limits:
      memory: 64Mi
      cpu: 400m

backendMock:
  enabled: false
  replicas: 2
  image:
    registry: ghcr.io/benlewsey27
    repository: react-weather-mock
    tag: latest
  service:
    name: react-weather-mock
    type: ClusterIP
    port: 3002
  resources:
    requests:
      memory: 64Mi
      cpu: 200m
    limits:
      memory: 64Mi
      cpu: 400m
